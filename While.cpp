#include <stdio.h>
#include <iostream>
#include <conio.h>
#include "MyLib.h"
#include <math.h>;
using namespace std;

/*While5.Дано целое число N(> 0), являющееся некоторой степенью числа 2:
N = 2 ^ K.Найти целое число K — показатель этой степени.*/

int while_5()
{
	setlocale(LC_ALL, "Russian");
	int n, k = 0;
	cout << "While5. Дано целое число N(> 0), являющееся некоторой степенью числа 2:\nN = 2 ^ K.Найти целое число K — показатель этой степени.\n";
	cout << "N = ";
	cin >> n;
	while (n >= 2) {
		n = n / 2;
		k = k + 1;
	}
	cout << "K = " << k << endl;
	return 0;
}

/*While10. Дано целое число N (> 1). Найти наибольшее целое число K, при ко-
тором выполняется неравенство 3 ^ K < N.*/

int while_10()
{
	setlocale(LC_ALL, "Russian");
	int n, i = 3, k = 0;
	cout << "While10. Дано целое число N (> 1). Найти наибольшее целое число K, при котором выполняется неравенство (3 ^ K) < N.\n";
	cout << "N = ";
	cin >> n;
	while (i < n) {
		i = i * 3;
		k++;
	}
	cout << "K = " << k;
	return 0;
}

/*While20. Дано целое число N (> 0). С помощью операций деления нацело и взя-
тия остатка от деления определить, имеется ли в записи числа N цифра «2».
Если имеется, то вывести True, если нет — вывести False.*/

int while_20()
{
	setlocale(LC_ALL, "Russian");
	cout << "While20. Дано целое число N (> 0). С помощью операций деления нацело и взятия остатка от деления определить, имеется ли в записи числа N цифра «2».\nЕсли имеется, то вывести True, если нет — вывести False.\n";
	int n;
	cout << "N = ";
	cin >> n;
	while ((n > 0) && ((n % 10) != 2)) {
		n = n / 10;
	}
	if ((n > 0) && ((n % 10) == 2)) cout << "True\n";
	else cout << "False\n";
	return 0;
}

/*While25. Дано целое число N (> 1). Найти первое число Фибоначчи, большее N.
(определение чисел Фибоначчи дано в задании While24).*/

int while_25()
{
	setlocale(LC_ALL, "Russian");
	int n, k = 0, k1 = 1, k2 = 1;
	cout << "While25. Дано целое число N (> 1). Найти первое число Фибоначчи, большее N.\n";
	cout << "N = ";
	cin >> n;
	while (k <= n) {
		k = k1 + k2;
		k1 = k2;
		k2 = k;
	}
	cout << k;
	return 0;
}

/*While30. Даны положительные числа A, B, C. На прямоугольнике размера A × B
размещено максимально возможное количество квадратов со стороной C
(без наложений). Найти количество квадратов, размещенных на прямо-
угольнике. Операции умножения и деления не использовать.*/

int while_30()
{
	setlocale(LC_ALL, "Russian");
	double a, b, c;
	cout << "While30. Даны положительные числа A, B, C. На прямоугольнике размера A × B размещено максимально возможное количество квадратов со стороной C (без наложений).\nНайти количество квадратов, размещенных на прямоугольнике. Операции умножения и деления не использовать.\n";
	cout << "A = ";
	cin >> a;
	cout << "B = ";
	cin >> b;
	cout << "C = ";
	cin >> c;
	int k = 0, i;
	while ((a - c) >= 0) {
		a = a - c;
		i = b;
		while ((i - c) >= 0) {
			i = i - c;
			k++;
		}
	}
	cout << "Максимально возможное количество квадратов со стороной C: " << k << endl;
	return 0;
}